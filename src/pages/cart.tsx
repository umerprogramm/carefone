import { MongoClient } from 'mongodb'
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import  {getSession, setSession} from '../utils/session'
import { parse } from 'cookie';


export default function cart() {
    const [ addItem , setAddItem ] = useState(0)
    const [ savedObject , SetsavedObject ] = useState('')
    useEffect(()=>{
        if(localStorage.getItem('cart')){
            setAddItem(parseInt(localStorage.getItem('cart')))
        }

        setSession()
    },[])

    const AddItem = ()=>{
        if(localStorage.getItem('cart')){
            setAddItem(parseInt(localStorage.getItem('cart')) + 1)
            let num = addItem + 1
            localStorage.setItem('cart', num.toString())
            console.log(num) 
        }else{
            setAddItem(addItem + 1)
            localStorage.setItem('cart', addItem.toString())
            console.log(addItem) 
        }
        
    }

    const reduceItem = ()=>{
        if(addItem === 0) {
            setAddItem(0)
        }else{
            setAddItem(parseInt(localStorage.getItem('cart')) - 1)
            let num = addItem - 1
            localStorage.setItem('cart', num.toString())
            console.log(num) 
        }
    }
    return (
        <>
            <Head>
                <title>Carephone  | cart
                </title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
                <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.4/flowbite.min.css" rel="stylesheet" />

            </Head>


            <nav>
      <a href="/" className="p-10 flex items-center  bg-slate-50 h-11">
        <span className="self-center text-xl font-extrabold whitespace-nowrap text-blue-700 bg-slate-50">CAREPHONE
        </span>
        </a>
      </nav>



            <div className="sideCart bg-gray-100  rounded-xl p-6 m-2 dark:bg-slate-700"><ol className="list-none font-semibold"><li><div className="item flex my-5 "><div className="mr-2 flex font-semibold"><img src="https://codeswear.nyc3.cdn.digitaloceanspaces.com/zipperhoodies/gymshark-zipperhoodie-black/0.webp" className="object-contain rounded-lg border bg-white shadow-lg h-16 w-16"/>
                <strong className="relative inline-flex items-center text-xs font-medium">
                <span className="absolute -top-2 -right-2 h-5 w-5 rounded-full bg-blue-600 flex justify-center items-center items"><span>{addItem}</span></span>
                </strong>
                </div>
                <div className="w-2/3 font-semibold flex items-center capitalize">Gymshirt Zipper Hoodie (S/black)</div><div className="flex font-semibold items-center justify-end w-1/3 text-lg"> 
                <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 1024 1024" className="cursor-pointer bg-gray-100" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg">
                    <path onClick={reduceItem} d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h368c4.4 0 8 3.6 8 8v48z"></path></svg> <span className="mx-2 text-sm">{addItem}</span> <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 1024 1024" className="cursor-pointer bg-gray-100" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path onClick={AddItem} d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z">
                    </path>
                    </svg>
                </div></div>
            </li></ol>
                <span className="font-bold">Total: Rs.799</span>
            </div>
        </>
    )
}


async function getData(query) {
   

    const client = await MongoClient.connect("mongodb+srv://umer:niko12345@cluster0.5i8um.mongodb.net/?retryWrites=true&w=majority");
    const db = client.db('carefone');

    const data = await db.collection('products').find({ $or: query }).toArray()
    client.close();
    return data;
  }
  
  export const getServerSideProps = async (context) => {

    const cookieHeader = context.req.headers.cookie;
    const cookies = parse(cookieHeader || '');
    const myCookieValue = cookies['card'];
    const query = JSON.parse(myCookieValue) 
    const data = await getData(query) 
    console.log(data)
    return { props: {data : JSON.parse(JSON.stringify(data))}  };
  
  
  
  };